@model String

@{
    ViewBag.Title = "Edit User";
    ViewBag.BodyClass = "skin-blue sidebar-mini appliance-store";
    ViewBag.ActiveClass = "users";
}

<section class="content-header">
    <h1>
        Edit User
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><span class="fa fa-home"></span></a></li>
        <li> @Html.ActionLink("Users", "Index", "Users")</li>
        <li class="active"> @Html.ActionLink("Edit User (" + Model + ")", "Edit", "Users", new { id = Model }, null)</li>
    </ol>
</section>

<div id="view-container"></div>

<script id="view-template" type="text/x-kendo-template">
    <section class="content">
        <div class="row">
            <div class="col-sm-12">
                <div class="box">
                    <div class="box-body">
                        <form id="userEditForm">
                            <div class="row">
                                <div class="form-group col-sm-3">
                                    <label>Staff No</label>
                                    <div class="detail">#= data.UserName #</div>
                                </div>
                                @*<div class="form-group col-sm-3">
                                    <label>Login type</label>
                                    <div class="detail">#= data.LoginType #</div>
                                </div>*@
                                <div class="form-group col-sm-3">
                                    <label>Last login</label>
                                    <div class="detail">#= neverLogin ? 'Never' : kendo.toString(data.LastLogin, 'G') #</div>
                                </div>
                            </div>
                            <fieldset>
                                <legend>Staff Details</legend>
                                <div class="row">
                                    <div class="col-sm-10">
                                        <div class="row">
                                            <div class="form-group col-sm-6">
                                                <label for="FullName" class="mandatory">Staff Name</label>
                                                <input type="text" id="FullName" name="FullName" class="form-control" data-bind="value: data.FullName" required data-required-msg="Full Name is required" />
                                            </div>
                                            <div class="form-group col-sm-6">
                                                <label for="Email">Email</label>
                                                <input type="email" id="Email" name="Email" class="form-control" data-bind="value: data.Email">
                                            </div>
                                            <div class="form-group col-sm-6">
                                                <label for="OfficeNumber">Office Phone No.</label>
                                                <input type="text" id="OfficeNumber" name="OfficeNumber" pattern="[-\\d]{9,13}" class="form-control" data-bind="value: data.OfficeNumber" data-pattern-msg="Contact number not valid">
                                            </div>
                                            <div class="form-group col-sm-6">
                                                <label for="PhoneNumber">Mobile Phone No.</label>
                                                <input type="text" id="PhoneNumber" name="PhoneNumber" pattern="[-\\d]{9,13}" class="form-control" data-bind="value: data.PhoneNumber" data-pattern-msg="Contact number not valid">
                                            </div>
                                            <div class="form-group col-sm-6">
                                                <label for="Designation">Designation</label>
                                                <input type="text" id="Designation" name="Designation" class="form-control" data-bind="value: data.Designation" />
                                            </div>
                                            <div class="form-group col-sm-6">
                                                <label for="Department" class="control-label mandatory">Department</label>
                                                <input type="text" id="Department" name="Department" class="form-control" data-bind="value: data.Department" />
                                            </div>
                                            <div class="form-group col-sm-6">
                                                <label for="Role" class="control-label">Role</label>
                                                <select data-role="dropdownlist"
                                                        data-text-field="Name"
                                                        data-value-field="Id"
                                                        data-option-label="Select..."
                                                        data-value-primitive="true"
                                                        data-bind="source: roles, value: data.RoleId"></select>
                                            </div>
                                            <div class="form-group col-sm-6">                                           
                                                <label>Status</label>
                                                <div>
                                                    <label class="checkbox-inline">
                                                        <input type="checkbox" data-bind="checked: data.IsActive" />
                                                        Active?
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-2">
                                        <div style="border:1px solid \\#ddd;padding: 3px;text-align:center;" data-bind="visible: hasPhoto">
                                            <img alt="photo" style="width:100%" data-bind="attr: { src: data.Photo }" />
                                        </div>
                                        <div style="border:1px solid \\#ddd;padding: 3px;text-align:center;min-height:150px" data-bind="invisible: hasPhoto">
                                            <span class="fa fa-user fa-5x" style="margin-top:20px"></span>
                                            <div style="font-style:italic">No photo</div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary" data-bind="click: save">Update</button>
                                <button class="btn btn-warning pull-right" data-bind="click: changePassword, visible: canChangePassword">Change Password</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
        </div>
    </section>
</script>

@section Scripts
{
<script>
    $(function () {
        var user;
        $.ajax(
        {
            url: "@Url.Action("Detail", "Users", new { id = Model })",
            type: 'GET',
            datatype: 'json',
            async: false,
            success: function (data, textStatus, jqXHR) {
                user = data;
            },
            error: function (jqXHR, textStatus, errorThrown) {
                app.notifyError("Some error occured, please try again.", jqXHR);
            }
        });

        user.LoginType = (user.LoginType == 0) ? "Internal" : "ActiveDirectory";
        user.LastLogin = kendo.parseDate(user.LastLogin);
        user.RetireDate = kendo.parseDate(user.RetireDate);

        var viewModel = kendo.observable({
            roles: app.makeDataSource("@Url.RouteUrl(new { controller = "RoleGridItem" })", {
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "string", defaultValue: app.emptyGuid },
                            Name: { type: "string" }
                        }
                    }
                },
                pageSize: 0
            }),

            hasPhoto: function () {
                var photo = this.get("data.Photo");
                return photo != null && photo != "";
            },

            canChangePassword: user.LoginType == "Internal",

            changePassword: function (e) {
                e.preventDefault();
                app.navigate("@Url.Action("ChangePassword", "Users", new { id = Model })");
            },

            data: user,

            save: function (e) {
                e.preventDefault();

                var fullName = this.get("data.FullName");
                var email = this.get("data.Email");
                var phoneNumber = this.get("data.PhoneNumber");
                var officeNumber = this.get("data.OfficeNumber");
                var photo = this.get("data.Photo");
                var login_Type = this.get("data.LoginType");
                var roleId = this.get("data.RoleId");
                var designation = this.get("data.Designation");
                var department = this.get("data.Department");

                var form = $('#userEditForm');
                var validator = form.data('kendoValidator') || form.kendoValidator().data('kendoValidator');

                if (!validator.validate()) {
                    app.notifyError("There are some errors please check your input.")
                    window.scrollTo(0, 0);
                    return;
                }

                //if (confirm("Are you sure want to update user details ?")) {
                    $.ajax({
                        url: "@Url.Action("Update", "Users", new { id = Model })",
                        type: 'POST',
                        data: {
                            Id: "@Model",
                            FullName: fullName,
                            Email: email,
                            PhoneNumber: phoneNumber,
                            OfficeNumber: officeNumber,
                            Photo: photo,
                            LoginType: login_Type,
                            RoleId: roleId,
                            Designation: designation,
                            Department: department,
                            IsActive: viewModel.get("data.IsActive")
                        },
                        dataType: 'json',
                        async: false,
                        success: function (data, textStatus, jqXHR) {
                            app.notifySuccess("User details has been updated successfully.");
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            app.notifyError("Some error occured, please try again.", jqXHR);
                        }
                    });
                //}
            },

            neverLogin: user.LastLogin.getFullYear() == 0001,
        });

        var view = new kendo.View("view-template", {
            model: viewModel,
            evalTemplate: true,
            show: function (e) {

            }
        });

        view.render("#view-container");
    });
</script>
}
